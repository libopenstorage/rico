// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/libopenstorage/rico/pkg/cloudprovider (interfaces: Interface)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockInterface is a mock of Interface interface
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// DeviceAdd mocks base method
func (m *MockInterface) DeviceAdd() error {
	ret := m.ctrl.Call(m, "DeviceAdd")
	ret0, _ := ret[0].(error)
	return ret0
}

// DeviceAdd indicates an expected call of DeviceAdd
func (mr *MockInterfaceMockRecorder) DeviceAdd() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeviceAdd", reflect.TypeOf((*MockInterface)(nil).DeviceAdd))
}

// DeviceDelete mocks base method
func (m *MockInterface) DeviceDelete() error {
	ret := m.ctrl.Call(m, "DeviceDelete")
	ret0, _ := ret[0].(error)
	return ret0
}

// DeviceDelete indicates an expected call of DeviceDelete
func (mr *MockInterfaceMockRecorder) DeviceDelete() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeviceDelete", reflect.TypeOf((*MockInterface)(nil).DeviceDelete))
}
