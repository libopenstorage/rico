// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/libopenstorage/rico/pkg/cloudprovider (interfaces: Interface)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	cloudprovider "github.com/libopenstorage/rico/pkg/cloudprovider"
	reflect "reflect"
)

// MockInterface is a mock of Interface interface
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// DeviceCreate mocks base method
func (m *MockInterface) DeviceCreate(arg0 string, arg1 *cloudprovider.DeviceSpecs) (*cloudprovider.Device, error) {
	ret := m.ctrl.Call(m, "DeviceCreate", arg0, arg1)
	ret0, _ := ret[0].(*cloudprovider.Device)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeviceCreate indicates an expected call of DeviceCreate
func (mr *MockInterfaceMockRecorder) DeviceCreate(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeviceCreate", reflect.TypeOf((*MockInterface)(nil).DeviceCreate), arg0, arg1)
}

// DeviceDelete mocks base method
func (m *MockInterface) DeviceDelete(arg0, arg1 string) error {
	ret := m.ctrl.Call(m, "DeviceDelete", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeviceDelete indicates an expected call of DeviceDelete
func (mr *MockInterfaceMockRecorder) DeviceDelete(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeviceDelete", reflect.TypeOf((*MockInterface)(nil).DeviceDelete), arg0, arg1)
}
