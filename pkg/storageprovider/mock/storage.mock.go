// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/libopenstorage/rico/pkg/storageprovider (interfaces: Interface)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	config "github.com/libopenstorage/rico/pkg/config"
	topology "github.com/libopenstorage/rico/pkg/topology"
	reflect "reflect"
)

// MockInterface is a mock of Interface interface
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// DeviceAdd mocks base method
func (m *MockInterface) DeviceAdd(arg0 *topology.StorageNode, arg1 *topology.Pool, arg2 []*topology.Device) error {
	ret := m.ctrl.Call(m, "DeviceAdd", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeviceAdd indicates an expected call of DeviceAdd
func (mr *MockInterfaceMockRecorder) DeviceAdd(arg0, arg1, arg2 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeviceAdd", reflect.TypeOf((*MockInterface)(nil).DeviceAdd), arg0, arg1, arg2)
}

// DeviceRemove mocks base method
func (m *MockInterface) DeviceRemove(arg0 *topology.StorageNode, arg1 *topology.Pool, arg2 *topology.Device) ([]*topology.Device, error) {
	ret := m.ctrl.Call(m, "DeviceRemove", arg0, arg1, arg2)
	ret0, _ := ret[0].([]*topology.Device)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeviceRemove indicates an expected call of DeviceRemove
func (mr *MockInterfaceMockRecorder) DeviceRemove(arg0, arg1, arg2 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeviceRemove", reflect.TypeOf((*MockInterface)(nil).DeviceRemove), arg0, arg1, arg2)
}

// GetTopology mocks base method
func (m *MockInterface) GetTopology() (*topology.Topology, error) {
	ret := m.ctrl.Call(m, "GetTopology")
	ret0, _ := ret[0].(*topology.Topology)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTopology indicates an expected call of GetTopology
func (mr *MockInterfaceMockRecorder) GetTopology() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTopology", reflect.TypeOf((*MockInterface)(nil).GetTopology))
}

// SetConfig mocks base method
func (m *MockInterface) SetConfig(arg0 *config.Config) {
	m.ctrl.Call(m, "SetConfig", arg0)
}

// SetConfig indicates an expected call of SetConfig
func (mr *MockInterfaceMockRecorder) SetConfig(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetConfig", reflect.TypeOf((*MockInterface)(nil).SetConfig), arg0)
}
